<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:tns="http://localhost:8000/IncidentService/"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  name="IncidentService"
                  targetNamespace="http://localhost:8000/IncidentService/">
  <wsdl:documentation>
    Definition for a web service called IncidentService
  </wsdl:documentation>

  <!--
      The `types` element defines the data types (XML elements)
      that are used by the web service.
   -->
  <wsdl:types>
    <xsd:schema targetNamespace="http://localhost:8000/IncidentService/">
      <xsd:element name="Incident">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ID" type="xsd:integer"/>
            <xsd:element name="DATEBEGIN" type="xsd:datetime"/>
            <xsd:element name="REPORTDATE" type="xsd:datetime"/>
            <xsd:element name="TARGETFINISH" type="xsd:datetime"/>
            <xsd:element name="CRITIC_LEVEL" type="xsd:integer"/>
            <xsd:element name="OBJ_OSN_ID" type="xsd:string"/>
            <xsd:element name="ASUSH_ID" type="xsd:string"/>
            <xsd:element name="OBJ_KOD" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>

      <xsd:element name="GetIncident">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ID" type="xsd:integer"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetIncidentResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element ref="tns:Incident" minOccurs="0" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>

      <xsd:element name="CreateOrUpdateIncident">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element ref="tns:Incident" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="CreateOrUpdateIncidentResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element ref="tns:Incident" minOccurs="0" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>


  <!--
      A wsdl `message` element is used to define a message
      exchanged between a web service, consisting of zero
      or more `part`s.
   -->

  <wsdl:message name="GetIncidentRequest">
    <wsdl:part element="tns:GetIncident" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="GetIncidentResponse">
    <wsdl:part element="tns:GetIncidentResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="CreateOrUpdateIncidentRequest">
    <wsdl:part name="parameters" element="tns:CreateOrUpdateIncident"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateOrUpdateIncidentResponse">
    <wsdl:part name="parameters" element="tns:CreateOrUpdateIncidentResponse"></wsdl:part>
  </wsdl:message>

  <!--
      A WSDL `portType` is used to combine multiple `message`s
      (e.g. input, output) into a single operation.

      Here we define three synchronous (input/output) operations
      and the `message`s that must be used for each.
   -->
  <wsdl:portType name="IncidentService">
    <wsdl:operation name="GetIncident">
      <wsdl:input message="tns:GetIncidentRequest"/>
      <wsdl:output message="tns:GetIncidentResponse"/>
    </wsdl:operation>
    <wsdl:operation name="CreateOrUpdateIncident">
      <wsdl:input message="tns:CreateOrUpdateIncidentRequest"></wsdl:input>
      <wsdl:output message="tns:CreateOrUpdateIncidentResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>

  <!--
      The `binding` element defines exactly how each
      `operation` will take place over the network.
      In this case, we are using SOAP.
   -->
  <wsdl:binding name="IncidentServiceSOAP" type="tns:IncidentService">
    <soap:binding style="document"
                  transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetIncident">
      <soap:operation
              soapAction="http://localhost:8000/IncidentService/GetIncident"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CreateOrUpdateIncident">
      <soap:operation
              soapAction="http://localhost:8000/IncidentService/CreateOrUpdateIncident"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>

  <!--
      The `service` element finally says where the service
      can be accessed from - in other words, its endpoint.
   -->
  <wsdl:service name="IncidentService">
    <wsdl:port binding="tns:IncidentServiceSOAP" name="IncidentServiceSOAP">
      <soap:address location="http://localhost:8000/IncidentService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
